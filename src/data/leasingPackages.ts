/**
 * KUNDV츿NLIGA PAKETNAMN OCH BESKRIVNINGAR
 * 
 * Dessa paket l친ses vid k칬p och kan inte 칛ndras under avtalstiden.
 */

export const LEASING_PACKAGES = {
  GRUNDLEASING: {
    id: 'grundleasing',
    name: 'Grundleasing',
    shortName: 'Grund',
    description: 'L칛gsta m친nadsavgift. Credits debiteras separat per anv칛ndning.',
    detailedDescription: 'Idealisk f칬r dig med l칛gre eller varierande behandlingsvolym.',
    sliderPosition: 0,
    icon: '游눠',
    benefits: [
      'L칛gsta m친nadskostnad',
      'Betala endast f칬r anv칛nda credits',
      'Flexibel kostnad baserat p친 anv칛ndning'
    ],
    bestFor: 'L친g eller varierande behandlingsvolym'
  },
  
  HYBRIDPAKET: {
    id: 'hybridpaket', 
    name: 'Hybridpaket',
    shortName: 'Hybrid',
    description: 'En balans mellan fast och r칬rligt. En del credits inkluderas i m친nadsavgiften.',
    detailedDescription: 'Medan andra debiteras separat baserat p친 anv칛ndning ut칬ver det inkluderade.',
    sliderPosition: 1,
    icon: '丘뒲잺',
    benefits: [
      'Balanserad kostnad',
      'Delvis f칬ruts칛gbar budget',
      'Vissa credits inkluderade'
    ],
    bestFor: 'M친ttlig behandlingsvolym'
  },
  
  ALLT_INKLUDERAT: {
    id: 'allt-inkluderat',
    name: 'Allt-inkluderat', 
    shortName: 'Allt-ink',
    description: 'Fullst칛ndig kostnadskontroll mot h칬gre fast kostnad.',
    detailedDescription: 'Fast m친nadsavgift f칬r extremt h칬g volym eller n칛r enkelhet v칛ger tyngst.',
    sliderPosition: 2,
    icon: '丘멆잺',
    benefits: [
      'Fast m친nadsavgift',
      'Alla credits inkluderade', 
      'Inga variabla kostnader',
      'F칬ruts칛gbar budget'
    ],
    bestFor: 'Extremt h칬g volym eller enkelhets칬nskem친l'
  }
} as const;

export type LeasingPackageId = keyof typeof LEASING_PACKAGES;

/**
 * H칛mta paketinformation baserat p친 slider-position
 */
export function getPackageBySliderPosition(position: number) {
  const packages = Object.values(LEASING_PACKAGES);
  return packages.find(pkg => pkg.sliderPosition === position) || LEASING_PACKAGES.GRUNDLEASING;
}

/**
 * H칛mta paketinformation baserat p친 ID
 */
export function getPackageById(id: string) {
  return Object.values(LEASING_PACKAGES).find(pkg => pkg.id === id) || LEASING_PACKAGES.GRUNDLEASING;
}

/**
 * Kontrollera om ett paket inkluderar credits
 */
export function packageIncludesCredits(packageId: LeasingPackageId): boolean {
  return packageId === 'ALLT_INKLUDERAT';
}

/**
 * Kontrollera om ett paket 칛r hybrid (delvis credits inkluderade)
 */
export function packageIsHybrid(packageId: LeasingPackageId): boolean {
  return packageId === 'HYBRIDPAKET';
}

/**
 * Varningstext f칬r att valet l친ses vid k칬p
 */
export const PACKAGE_LOCK_WARNING = {
  title: 'Viktigt att veta',
  message: 'Den valda leasingmodellen l친ses vid k칬p och kan inte 칛ndras under avtalstiden.',
  icon: '丘멆잺'
};