
import { useCallback, useEffect } from 'react';
import { useCalculator } from '@/context/CalculatorContext';
import { useToast } from '@/hooks/use-toast';

export function useFlatrateHandler() {
  const { 
    selectedMachine, 
    useFlatrateOption, 
    setUseFlatrateOption, 
    treatmentsPerDay,
    leasingCost,
    flatrateThreshold,
    paymentOption,
    selectedDriftpaket,
    currentSliderStep,
    setCurrentSliderStep,
    isFlatrateViable,
    isLeasingFlatrateViable
  } = useCalculator();

  const { toast } = useToast();

  // UPPDATERAT VILLKOR: 
  // - Vid kontantk칬p 칛r flatrate ALLTID valbart
  // - Vid leasing kr칛vs att currentSliderStep >= 1 (Standard eller h칬gre)
  // - Kr칛ver att maskinen anv칛nder credits och 칛r i Bas-paketet
  // - Silver/Guld-paket har automatisk flatrate
  const canEnableFlatrate = Boolean(
    selectedMachine?.usesCredits && (
      (selectedDriftpaket === 'Bas' && (
        paymentOption === 'cash' || // Vid kontant: alltid till친tet
        (paymentOption === 'leasing' && isLeasingFlatrateViable) // Vid leasing: kr칛ver Standard+
      )) ||
      (selectedDriftpaket === 'Silver' || selectedDriftpaket === 'Guld') // Automatisk flatrate f칬r Silver/Guld
    )
  );

  const handleFlatrateChange = useCallback((checked: boolean) => {
    const newOption = checked ? 'flatrate' : 'perCredit';
    console.log(`츿ndrar Flatrate-option till: ${newOption} (${checked ? 'enabled' : 'disabled'})`);
    
    // VIKTIG REGEL: N칛r flatrate aktiveras, hoppa ALLTID till Standard (position 1)
    if (checked) {
      // Om vi aktiverar flatrate och slider inte redan 칛r p친 Standard
      if (currentSliderStep !== 1) {
        console.log('Flyttar slider till Standard (1) d친 flatrate aktiveras');
        setCurrentSliderStep(1);
        
        // Visa ett meddelande till anv칛ndaren
        toast({
          title: "Slidern har justerats till Standard",
          description: "Flatrate kr칛ver och fungerar b칛st med standardniv친.",
          variant: "default"
        });
      }
      
      // Aktivera flatrate (med eventuell f칬rdr칬jning om slider flyttades)
      const delay = currentSliderStep !== 1 ? 300 : 0;
      setTimeout(() => {
        setUseFlatrateOption(newOption);
      }, delay);
      
    } else if (!checked && !canEnableFlatrate && paymentOption === 'leasing' && currentSliderStep < 1) {
      // Om f칬rs칬ker deaktivera flatrate men slider 칛r f칬r l친g f칬r leasing
      setCurrentSliderStep(1);
      
      toast({
        title: "Slidern har justerats till Standard", 
        description: "Minst standardniv친 kr칛vs f칬r denna leasingkonfiguration.",
        variant: "default"
      });
      
      setTimeout(() => {
        setUseFlatrateOption(newOption);
      }, 300);
    } else {
      // Annars byt direkt
      setUseFlatrateOption(newOption);
    }
  }, [setUseFlatrateOption, canEnableFlatrate, paymentOption, currentSliderStep, setCurrentSliderStep, toast]);

  // OMFATTANDE AUTOMATISK 칀TERST츿LLNING f칬r alla scenarios
  useEffect(() => {
    if (!selectedMachine?.usesCredits) return;

    // SCENARIO 1: Silver/Guld-paket => TVINGA flatrate
    if (selectedDriftpaket === 'Silver' || selectedDriftpaket === 'Guld') {
      if (useFlatrateOption !== 'flatrate') {
        console.log(`游댃 Aktiverar automatisk flatrate f칬r ${selectedDriftpaket}-paket`);
        
        // VIKTIG: N칛r Silver/Guld automatiskt aktiverar flatrate, flytta slider till Standard
        if (currentSliderStep !== 1) {
          console.log('游늸 Flyttar slider till Standard (1) d친 Silver/Guld aktiverar flatrate automatiskt');
          setCurrentSliderStep(1);
        }
        
        setUseFlatrateOption('flatrate');
      }
    }
    
    // SCENARIO 2: Brons-paket => 칀TERST츿LL till perCredit (men till친t manuell override)
    else if (selectedDriftpaket === 'Bas') {
      // Automatisk 친terst칛llning till perCredit f칬r Brons
      if (useFlatrateOption === 'flatrate') {
        console.log('游댃 칀terst칛ller automatiskt till perCredit f칬r Brons-paket');
        setUseFlatrateOption('perCredit');
      }
    }
  }, [selectedDriftpaket, selectedMachine?.usesCredits, setUseFlatrateOption, currentSliderStep, setCurrentSliderStep, useFlatrateOption]);

  // SCENARIO 3: Maskinbyte => 칀TERST츿LL baserat p친 ny maskin
  useEffect(() => {
    if (!selectedMachine?.usesCredits && useFlatrateOption === 'flatrate') {
      console.log('游댃 칀terst칛ller flatrate f칬r maskin utan credits');
      setUseFlatrateOption('perCredit');
    }
  }, [selectedMachine?.usesCredits, useFlatrateOption, setUseFlatrateOption]);

  // SCENARIO 4: Betalningsmetod byte => SYNKA med nya villkor
  useEffect(() => {
    // Vid kontantk칬p: alltid till친tet, ingen automatisk 칛ndring
    // Vid leasing: kontrollera slider-position f칬r Bas-paketet
    if (paymentOption === 'leasing' && selectedDriftpaket === 'Bas' && useFlatrateOption === 'flatrate' && currentSliderStep < 1) {
      console.log('游댃 칀terst칛ller flatrate f칬r leasing vid l친g slider-position');
      setUseFlatrateOption('perCredit');
    }
  }, [paymentOption, selectedDriftpaket, useFlatrateOption, currentSliderStep, setUseFlatrateOption]);

  return {
    handleFlatrateChange,
    useFlatrateOption,
    canEnableFlatrate
  };
}
